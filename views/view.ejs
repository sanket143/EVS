<!DOCTYPE html>
<html>
    <head>
        <title> Plot </title>

        <link rel='stylesheet' href='/stylesheets/style.css' />
        <link rel='stylesheet' href='/stylesheets/view.css' />
    </head>
    <body>
        <% include navbar.ejs %>
        <div id="plots"> </div>
        <!-- Latest compiled and minified plotly.js JavaScript -->
        <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
        <script>
            var months = [
                "JAN",
                "FEB",
                "MAR",
                "APR",
                "MAY",
                "JUN",
                "JUL",
                "AUG",
                "SEP",
                "OCT",
                "NOV",
                "DEC"
            ];

            var html = "";
            for(i in months){
                html += '<div class="plot-wrapper">';
                html += '<h3 class="label">' + months[i] + '</h3>';
                html += '<div id="' + months[i] + '"></div>';
                html += '</div>';
            }

            document.getElementById("plots").innerHTML = html;

            var raw = <%- JSON.stringify(data) %>;
            console.log(raw);

            var raw_temp = raw.slice(33, 66);
            var raw_radi = raw.slice(66, raw.length);
            var x_axis = [...Array(33).keys()].map(function(num){
                return num + 1985;
            });

            for(i in months){
                month = months[i];
                temp = raw_temp.map(function(item){
                    return item[month];
                })

                radi = raw_radi.map(function(item){
                    return item[month];
                })


                var eo_arr = [];

                for(i in temp){
                    Tk = 273 + temp[i];
                    RA = radi[i] * 1000 / (11.622 * 7);
                    AB = 0.17;

                    h0 = RA * (1 - AB) / 58.3;

                    dels = 5304 * (Math.pow(Math.E, 21.255 - 5304/Tk)) / Math.pow(Tk, 2);
                    gamma = dels / (dels + 0.68);

                    E0 = 1.28 * h0 * gamma;
                    eo_arr.push(E0);
                }


                /* LINEAR REGRESSION */
                x_average = x_axis.reduce(function(a, b){
                    return a + b;
                }) / x_axis.length;

                eo_average = eo_arr.reduce(function(a, b){
                    return a + b;
                }) / eo_arr.length;

                b_numerator = 0;
                b_denominator = 0;
                for(i = 0; i < x_axis.length - 3; i++){
                    b_numerator += (x_axis[i] - x_average) * (eo_arr[i] - eo_average);
                    b_denominator += (x_axis[i] - x_average);
                }

                // Consider equation alpha = y_avg - beta * x_avg
                beta = b_numerator / b_denominator;
                alpha = eo_average - beta * x_average;
                x_p = [...Array(3).keys()].map(function(num){
                    return num + 2015;
                })

                eo_p = x_p.map(function(year){
                    return eo_average;
                    // return alpha + beta * year;
                });
                console.log(month, temp, radi);

                plot_div = document.getElementById(month);
                Plotly.plot(plot_div, [
                    {
                        x: x_axis,
                        y: eo_arr,
                        mode: 'markers',
                        type: 'scatter',
                        
                    },
                    {
                        x: x_p,
                        y: eo_p
                    },
                ],
                // {
                //     yaxis: {
                //         range: [0, 1]
                //     }
                // }
                );
            }

            console.log(raw_temp);
/*
            var temp = raw["temp"].map(function(item){
                return parseFloat(item["TS"]);
            });

            var radi = raw["radi"].map(function(item){
                return parseFloat(item["ALLSKY_SFC_LW_DWN"]);
            })

            var eo_arr = [];

            for(i in temp){
                Tk = 273 + temp[i];
                RA = radi[i];
                AB = 0.17;

                h0 = RA * (1 - AB) / 58.3;

                dels = 5304 * (Math.pow(Math.E, 21.255 - 5304/Tk)) / Math.pow(Tk, 2);
                gamma = dels / (dels + 0.68);

                E0 = 1.28 * h0 * gamma;
                eo_arr.push(E0);
            }

            plot_div = document.getElementById("plot_div");
            Plotly.plot(plot_div, [{
                x: [...Array(eo_arr.length).keys()],
                y: eo_arr
            }]);
*/
        </script>
    </body>
</html>